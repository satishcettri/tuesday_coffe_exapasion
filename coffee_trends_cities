-- Coffee Sales Analysis and Market Insights

-- Q1: Estimate Coffee Consumers by City
-- Calculate the number of coffee consumers assuming 25% of the population drinks coffee.
SELECT 
    city_name,
    ROUND((population * 0.25) / 1000000, 2) AS coffee_consumers_in_millions,
    city_rank
FROM 
    city
ORDER BY 
    coffee_consumers_in_millions DESC;

-- Q2: Total Coffee Sales Revenue (Last Quarter of 2023)
-- Calculate total revenue from coffee sales in the last quarter of 2023.
SELECT 
    SUM(total) AS total_revenue
FROM 
    sales
WHERE 
    EXTRACT(YEAR FROM sale_date) = 2023
    AND EXTRACT(QUARTER FROM sale_date) = 4;

-- Q2a: Revenue by City
-- Break down total revenue by city for Q4 2023.
SELECT 
    ci.city_name,
    SUM(s.total) AS total_revenue
FROM 
    sales AS s
JOIN 
    customers AS c ON s.customer_id = c.customer_id
JOIN 
    city AS ci ON ci.city_id = c.city_id
WHERE 
    EXTRACT(YEAR FROM s.sale_date) = 2023
    AND EXTRACT(QUARTER FROM s.sale_date) = 4
GROUP BY 
    ci.city_name
ORDER BY 
    total_revenue DESC;

-- Q3: Product Sales Volume
-- Determine the number of units sold for each coffee product.
SELECT 
    p.product_name,
    COUNT(s.sale_id) AS total_orders
FROM 
    products AS p
LEFT JOIN 
    sales AS s ON s.product_id = p.product_id
GROUP BY 
    p.product_name
ORDER BY 
    total_orders DESC;

-- Q4: Average Sales per Customer by City
-- Calculate average sales per customer in each city.
SELECT 
    ci.city_name,
    SUM(s.total) AS total_revenue,
    COUNT(DISTINCT s.customer_id) AS total_customers,
    ROUND(SUM(s.total)::numeric / COUNT(DISTINCT s.customer_id)::numeric, 2) AS avg_sale_per_customer
FROM 
    sales AS s
JOIN 
    customers AS c ON s.customer_id = c.customer_id
JOIN 
    city AS ci ON ci.city_id = c.city_id
GROUP BY 
    ci.city_name
ORDER BY 
    total_revenue DESC;

-- Q5: Population and Coffee Consumers
-- Combine city population data with the number of customers and estimated coffee consumers.
WITH city_data AS (
    SELECT 
        city_name,
        ROUND((population * 0.25) / 1000000, 2) AS coffee_consumers_in_millions
    FROM 
        city
),
customer_data AS (
    SELECT 
        ci.city_name,
        COUNT(DISTINCT c.customer_id) AS unique_customers
    FROM 
        sales AS s
    JOIN 
        customers AS c ON c.customer_id = s.customer_id
    JOIN 
        city AS ci ON ci.city_id = c.city_id
    GROUP BY 
        ci.city_name
)
SELECT 
    cd.city_name,
    cd.coffee_consumers_in_millions,
    cu.unique_customers
FROM 
    city_data AS cd
JOIN 
    customer_data AS cu ON cd.city_name = cu.city_name;

-- Q6: Top 3 Selling Products by City
-- Identify the top 3 selling products for each city.
SELECT 
    city_name,
    product_name,
    total_orders
FROM (
    SELECT 
        ci.city_name,
        p.product_name,
        COUNT(s.sale_id) AS total_orders,
        DENSE_RANK() OVER (PARTITION BY ci.city_name ORDER BY COUNT(s.sale_id) DESC) AS rank
    FROM 
        sales AS s
    JOIN 
        products AS p ON s.product_id = p.product_id
    JOIN 
        customers AS c ON c.customer_id = s.customer_id
    JOIN 
        city AS ci ON ci.city_id = c.city_id
    GROUP BY 
        ci.city_name, p.product_name
) ranked_data
WHERE 
    rank <= 3;

-- Q7: Unique Coffee Customers by City
-- Determine how many unique customers in each city purchased coffee products.
SELECT 
    ci.city_name,
    COUNT(DISTINCT c.customer_id) AS unique_customers
FROM 
    city AS ci
LEFT JOIN 
    customers AS c ON c.city_id = ci.city_id
JOIN 
    sales AS s ON s.customer_id = c.customer_id
WHERE 
    s.product_id IN (SELECT product_id FROM products WHERE category = 'Coffee')
GROUP BY 
    ci.city_name;

-- Q8: Average Sales vs Rent
-- Compare average sales per customer and average rent per customer for each city.
WITH city_sales AS (
    SELECT 
        ci.city_name,
        SUM(s.total) AS total_revenue,
        COUNT(DISTINCT s.customer_id) AS total_customers,
        ROUND(SUM(s.total)::numeric / COUNT(DISTINCT s.customer_id)::numeric, 2) AS avg_sale_per_customer
    FROM 
        sales AS s
    JOIN 
        customers AS c ON s.customer_id = c.customer_id
    JOIN 
        city AS ci ON ci.city_id = c.city_id
    GROUP BY 
        ci.city_name
),
city_rent AS (
    SELECT 
        city_name,
        estimated_rent
    FROM 
        city
)
SELECT 
    cr.city_name,
    cr.estimated_rent,
    cs.total_customers,
    cs.avg_sale_per_customer,
    ROUND(cr.estimated_rent::numeric / cs.total_customers::numeric, 2) AS avg_rent_per_customer
FROM 
    city_rent AS cr
JOIN 
    city_sales AS cs ON cr.city_name = cs.city_name
ORDER BY 
    avg_sale_per_customer DESC;

-- Q9: Monthly Sales Growth
-- Calculate the percentage growth in sales for each city by month.
WITH monthly_sales AS (
    SELECT 
        ci.city_name,
        EXTRACT(MONTH FROM sale_date) AS month,
        EXTRACT(YEAR FROM sale_date) AS year,
        SUM(s.total) AS total_sales
    FROM 
        sales AS s
    JOIN 
        customers AS c ON c.customer_id = s.customer_id
    JOIN 
        city AS ci ON ci.city_id = c.city_id
    GROUP BY 
        ci.city_name, EXTRACT(MONTH FROM sale_date), EXTRACT(YEAR FROM sale_date)
),
sales_growth AS (
    SELECT 
        city_name,
        month,
        year,
        total_sales AS current_month_sales,
        LAG(total_sales) OVER (PARTITION BY city_name ORDER BY year, month) AS previous_month_sales
    FROM 
        monthly_sales
)
SELECT 
    city_name,
    month,
    year,
    current_month_sales,
    previous_month_sales,
    ROUND((current_month_sales - previous_month_sales)::numeric / previous_month_sales::numeric * 100, 2) AS growth_rate
FROM 
    sales_growth
WHERE 
    previous_month_sales IS NOT NULL;

-- Q10: Market Potential Analysis
-- Rank the top 3 cities based on sales, rent, customer count, and coffee consumption.
WITH city_summary AS (
    SELECT 
        ci.city_name,
        SUM(s.total) AS total_revenue,
        COUNT(DISTINCT s.customer_id) AS total_customers,
        ROUND(SUM(s.total)::numeric / COUNT(DISTINCT s.customer_id)::numeric, 2) AS avg_sale_per_customer
    FROM 
        sales AS s
    JOIN 
        customers AS c ON s.customer_id = c.customer_id
    JOIN 
        city AS ci ON ci.city_id = c.city_id
    GROUP BY 
        ci.city_name
),
city_data AS (
    SELECT 
        city_name,
        estimated_rent,
        ROUND((population * 0.25) / 1000000, 3) AS estimated_coffee_consumers
    FROM 
        city
)
SELECT 
    cd.city_name,
    cs.total_revenue,
    cd.estimated_rent,
    cs.total_customers,
    cd.estimated_coffee_consumers,
    cs.avg_sale_per_customer
FROM 
    city_data AS cd
JOIN 
    city_summary AS cs ON cd.city_name = cs.city_name
ORDER BY 
    total_revenue DESC
LIMIT 3;
